# The name of the plugin for the global planner to use with move_base, default navfn/NavfnROS
#base_global_planner: navfn/NavfnROS
base_local_planner: base_local_planner/TrajectoryPlannerROS
#base_global_planner: sbpl_lattice_planner/SBPLLatticePlanner
# The name of the plugin for the local planner to use with move_base, default base_local_planner/TrajectoryPlannerROS

base_local_planner: base_local_planner/TrajectoryPlannerROS
#base_local_planner: dwa_local_planner/DWAPlannerROS

# The rate in Hz at which to run the planning loop, default 0.0
planner_frequency: 0.0
# The rate in Hz at which to run the control loop and send velocity commands to the base, default 20.0
controller_frequency: 20.0
# How long the planner will wait in seconds in an attempt to find a valid plan before space-clearing operations are performed, default 5.0
planner_patience: 5.0
# How long the controller will wait in seconds without receiving a valid control before space-clearing operations are performed, default 5.0
controller_patience: 5.0
# Whether or not to enable the move_base recovery behaviors to attempt to clear out space, default true
recovery_behavior_enabled: true
# Determines whether or not the robot will attempt an in-place rotation when attempting to clear out space, default true
clearing_rotation_allowed: false
# Determines whether or not to shutdown the costmaps of the node when move_base is in an inactive state, default false
shutdown_costmaps: false
# How long in seconds to allow for oscillation before executing recovery behaviors, default 0.0, means deactivated
oscillation_timeout: 0.0
# How far in meters the robot must move to be considered not to be oscillating, default 0.5
oscillation_distance: 0.5

# set our own recovery behaviours.
recovery_behaviors:
  - name: 'convervative_reset'
    type: 'clear_costmap_recovery/ClearCostmapRecovery'
  - name: 'aggressive_reset'
    type: 'clear_costmap_recovery/ClearCostmapRecovery'
