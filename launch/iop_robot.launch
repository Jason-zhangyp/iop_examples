<launch>
    <arg name="robot_ns" default="bobrob"/>
    <param name="utm_zone" value="33" />
    <param name="utm_band" value="T" />

    <arg name="id_subsystem" default="133"/>
    <arg name="id_node" default="64"/>
    <param name="use_sim_time" value="true"/>

    <group ns="$(arg robot_ns)">
        <!-- TFs: -->
        <!-- <param name="tf_prefix" value="$(arg robot_ns)" /> -->

        <!-- stage_simulator -->
        <node name="ros_stage_roemer" pkg="stage_ros" type="stageros" args="$(find iop_cfg_sim_stage_fkie)/launch/stagecfg/roemer.world">
            <param name="capability_group" value="0simulation" />
        </node>

        <node required="true" name="tf_world_roemer_map" pkg="tf" type="static_transform_publisher" args="365796 5624047 0 0 0 0 /world map 100">
            <param name="capability_group" value="0simulation"/>
        </node>
        <!-- <node required="true" name="tf_world_tedesus_map" pkg="tf_tools_fkie" type="static_transform_publisher" args="365796 5624047 0 0 0 0 /world /sim_td_map 100"> -->
            <!-- <param name="capability_group" value="_tf"/> -->
        <!-- </node> -->

        <node name="tf2satfix" pkg="iop_cfg_sim_stage_fkie" type="tf2satfix.py" >
            <param name="capability_group" value="0simulation"/>
            <param name="world_frame" value="world"/>
            <param name="robot_frame" value="base_link"/>
            <param name="hz" value="10.0"/>
        </node>

<!--
        <arg name="simrob" value="simrob" />
        <node required="true" name="move_base" pkg="move_base" type="move_base">
            <rosparam file="$(find iop_cfg_sim_fkie)/launch/move_base_params.yaml"/>
        </node>
-->
    
        <!-- MAPPING -->
        <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" respawn="true" >
            <param name="capability_group" value="mapping" />
            <!-- Map size / start point -->
            <param name="map_resolution" value="0.25"/>
            <param name="map_size" value="400"/>
            <param name="map_start_x" value="0.5"/>
            <param name="map_start_y" value="0.5" />
            <param name="map_multi_res_levels" value="3" />
            <!-- <param name="map_update_distance_thresh" value="0.25" /> -->
            <!-- <param name="map_update_angle_thresh" value="0.25" /> -->

            <!-- TFs -->
            <param name="use_tf_scan_transformation" value="true"/>
            <param name="base_frame" value="base_link" />
            <param name="map_frame" value="map" />
            <param name="pub_map_odom_transform" value="true"/>
            <param name="odom_frame" value="odom" />
            <param name="use_tf_pose_start_estimate" value="false"/>
            <param name="advertise_map_service" value="false"/>
            <param name="scan_subscriber_queue_size" value="5"/>
            <param name="scan_topic" value="base_scan"/>
        </node>
        
        <node name="throttle_laser_front" pkg="topic_tools" type="throttle" args="messages laser_front 1">
            <param name="capability_group" value="iop_bridge"/>
        </node>

        <!-- IOP-ROS-BRIDGE -->
        <param name="name_subsystem" value="$(arg robot_ns)"/>
    
        <!-- <node required="true" name="jaus_node_manager" pkg="jaus_builder_fkie" type="jaus_node_manager.sh" args="start"> -->
              <!-- <param name="capability_group" value="_JAUS_NODE_MANAGER"/> -->
        <!-- </node> -->
    
        <node name="iop_platform_manager" pkg="iop_component_fkie" type="iop_component">
            <param name="capability_group" value="iop_bridge"/>
            <rosparam param="services">
              [
                iop_transport_1_1_fkie: "Transport_1_1",
                iop_events_1_0_fkie: "Events_1_0",
                iop_events_1_0_fkie: "EventsClient_1_0",
                iop_accesscontrol_1_0_fkie: "AccessControl_1_0",
                iop_discovery_1_0_fkie: "Discovery_1_0",
                iop_discovery_1_0_fkie: "DiscoveryClient_1_0",
                iop_management_1_0_fkie: "Management_1_0",
                iop_liveness_1_0_fkie: "Liveness_1_0",
                iop_global_pose_sensor_fkie: "GlobalPoseSensor_1_0",
                iop_local_pose_sensor_fkie: "LocalPoseSensor_1_0",
                iop_range_sensor_fkie: "RangeSensor_1_0",
                iop_primitive_driver_fkie: "PrimitiveDriver_1_0",
                iop_digital_resource_discovery_fkie: "DigitalResourceDiscovery_1_0",
                iop_health_monitor_fkie: "HealthMonitor_1_2",
                iop_platform_mode_fkie: "PlatformMode_1_1",
                iop_platform_state_fkie: "PlatformState_1_0",
              ]
            </rosparam>
            <param name="name_node" value="$(arg robot_ns)"/>
            <param name="iop_address" value="$(arg id_subsystem).$(arg id_node).15"/>
            <param name="name_subsystem" value="$(arg robot_ns)"/>
            <param name="enable_ros_interface" value="true"/>
            <param name="platform_mode" value="0"/>
            <param name="mode_status" value="1"/>
            <!--
              0: Reserved
              1: System Identification
              2: Subsystem Identification
              3: Node Identification
              4: Component Identification
              5: 255: Reserved
             -->
            <param name="system_id" value="2"/>
            <!-- 
              00000: Reserved
              10001: VEHICLE
              20001: OCU
              30001: OTHER_SUBSYSTEM
              40001: NODE
              50001: PAYLOAD
              60001: COMPONENT
             -->
            <param name="system_type" value="10001"/>

            <!-- Primitive Driver Parameter-->
            <param name="max_linear_x" value="3.0"/>
            <param name="max_angular_z" value="1.5"/>
            <param name="use_stamped" value="false" />
            <remap from="odom" to="odom"/>
            <remap from="cmd_vel" to="cmd_vel"/>

            <!-- Local Pose Parameter-->
            <param name="tf_hz" value="10.0"/>
            <!-- Global Pose Parameter-->
            <remap from="fix" to="gps_info"/>

            <!-- Range Sensor Parameter-->
            <!-- tf_frame_robot is used to determine the vehicle's coordinates for the range sensor.
                 If the transformation is not possible only native laser data will be send. -->
            <!-- <param name="tf_frame_robot" value="base_link"/>-->
            <!-- defines the laser sensors. It is a dictinary with frame_id as key and topic as value -->
            <rosparam param="sensors">[base_scan]</rosparam>
        </node>

        <node name="iop_costmap2d" pkg="iop_component_fkie" type="iop_component">
            <param name="capability_group" value="iop_bridge"/>
            <rosparam param="services">
              [
                iop_costmap2d_fkie: "CostMap2D_1_0",
                iop_discovery_1_0_fkie: "DiscoveryClient_1_0",
                iop_accesscontrol_1_0_fkie: "AccessControl_1_0",
                iop_events_1_0_fkie: "Events_1_0",
                iop_events_1_0_fkie: "EventsClient_1_0",
                iop_transport_1_0_fkie: "Transport_1_0",
              ]
            </rosparam>
            <param name="iop_address" value="$(arg id_subsystem).$(arg id_node).71"/>
            <param name="enable_ros_interface" value="false"/>
            <param name="register_own_services" value="true" />
            <param name="offset_yaw" value="0" />
            <!-- <param name="offset_yaw" value="1.5707" /> -->
            <param name="map_max_edge_size" value="200" />
            <param name="frame_odom" value="odom" />
        </node>
    
    </group>
</launch>
